setwd("C:/Users/13362/repos/warehouse-task-assignment/figures/lsns")
#install.packages(c("tidyverse", "shiny")) #, "leaflet", "DT", "hash"))
library(shiny)
library(tidyverse)
library(dplyr)
#Read in data
lsnsdata <- read_csv('lsnsprogression.csv')
lsnsdata$scheme <- paste(lsnsdata$method, lsnsdata$initialization)
lsnsdata <- lsnsdata %>%
filter(initialization == "(cold start)")
ggplot(lsnsdata, aes(x = lsnsiteration, y = objective, colour =scheme, group = scheme)) +
geom_line(size=2.5)+
scale_color_manual(breaks = c("Learn-then-optimize (warm start)", "Learn-then-optimize (cold start)", "Learning-enhanced (warm start)", "Learning-enhanced (cold start)","Domain-based (warm start)", "Domain-based (cold start)","Randomized (warm start)", "Randomized (cold start)"),
values = c("#FFB385", "#FE6100", "#EF99C4", "#DC267F", "#B9CDFF", "#648FFF", "#A1A1A1", "#5A5A5A")) +
xlim(0,50) +
xlab(" \nLSNS iteration ") +
ylab(" Throughput\n ")
#Read in data
lsnsdata <- read_csv('lsnsprogression.csv')
lsnsdata$scheme <- paste(lsnsdata$method, lsnsdata$initialization)
lsnsdata <- lsnsdata %>%
filter(initialization == "(cold start)")
ggplot(lsnsdata, aes(x = lsnsiteration, y = objective, colour =scheme, group = scheme)) +
geom_line(size=2.5)+
scale_color_manual(breaks = c("Learn-then-optimize (warm start)", "Learn-then-optimize (cold start)", "Learning-enhanced (warm start)", "Learning-enhanced (cold start)","Domain-based (warm start)", "Domain-based (cold start)","Randomized (warm start)", "Randomized (cold start)"),
values = c("#FFB385", "#FE6100", "#EF99C4", "#DC267F", "#B9CDFF", "#648FFF", "#A1A1A1", "#5A5A5A")) +
xlim(0,50)
ggplot(lsnsdata, aes(x = lsnsiteration, y = objective, colour =scheme, group = scheme)) +
geom_line(size=2.5)+
scale_color_manual(breaks = c("Learn-then-optimize (warm start)", "Learn-then-optimize (cold start)", "Learning-enhanced (warm start)", "Learning-enhanced (cold start)","Domain-based (warm start)", "Domain-based (cold start)","Randomized (warm start)", "Randomized (cold start)"),
values = c("#FFB385", "#FE6100", "#EF99C4", "#DC267F", "#B9CDFF", "#648FFF", "#A1A1A1", "#5A5A5A")) +
ggplot(lsnsdata, aes(x = lsnsiteration, y = objective, colour =scheme, group = scheme)) +
geom_line(size=2.5)+
scale_color_manual(breaks = c("Learn-then-optimize (warm start)", "Learn-then-optimize (cold start)", "Learning-enhanced (warm start)", "Learning-enhanced (cold start)","Domain-based (warm start)", "Domain-based (cold start)","Randomized (warm start)", "Randomized (cold start)"),
values = c("#FFB385", "#FE6100", "#EF99C4", "#DC267F", "#B9CDFF", "#648FFF", "#A1A1A1", "#5A5A5A"))
ggplot(lsnsdata, aes(x = lsnsiteration, y = objective, colour =scheme, group = scheme)) +
geom_line(size=2.5)+
scale_color_manual(breaks = c("Learn-then-optimize (warm start)", "Learn-then-optimize (cold start)", "Learning-enhanced (warm start)", "Learning-enhanced (cold start)","Domain-based (warm start)", "Domain-based (cold start)","Randomized (warm start)", "Randomized (cold start)"),
values = c("#FFB385", "#FE6100", "#EF99C4", "#DC267F", "#B9CDFF", "#648FFF", "#A1A1A1", "#5A5A5A"))
lsnsdata
View(lsnsdata)
#Read in data
lsnsdata <- read_csv('lsnsprogression.csv')
lsnsdata
View(lsnsdata)
lsnsdata%objective
lsnsdata$objective
ggplot(lsnsdata, aes(x = lsnsiteration, y = objective, colour =scheme, group = scheme)) +
geom_line(size=2.5)
lsnsdata <- read_csv('lsnsprogression.csv')
lsnsdata$scheme <- paste(lsnsdata$method, lsnsdata$initialization)
lsnsdata <- read_csv('lsnsprogression.csv')
lsnsdata$scheme <- paste(lsnsdata$method, lsnsdata$initialization)
lsnsdata <- lsnsdata %>%
filter(initialization == "(cold start)")
ggplot(lsnsdata, aes(x = lsnsiteration, y = objective, colour =scheme, group = scheme)) +
geom_line(size=2.5)
update_geom_defaults("text", list(size = 10))
dev.new(width=8, height=4)
png(file="lsnsiter.png",
width=1000, height=1200)
ggplot(lsnsdata, aes(x = lsnsiteration, y = objective, colour =scheme, group = scheme)) +
geom_line(size=2.5)+
scale_color_manual(breaks = c("Learn-then-optimize (warm start)", "Learn-then-optimize (cold start)", "Learning-enhanced (warm start)", "Learning-enhanced (cold start)","Domain-based (warm start)", "Domain-based (cold start)","Randomized (warm start)", "Randomized (cold start)"),
values = c("#FFB385", "#FE6100", "#EF99C4", "#DC267F", "#B9CDFF", "#648FFF", "#A1A1A1", "#5A5A5A")) +
xlim(0,50) +
xlab(" \nLSNS iteration ") +
ylab(" Throughput\n ") +
labs(title="") +
#theme(legend.position = c(0.4,.9), legend.direction = "horizontal")
theme(legend.position="bottom", legend.text = element_text(face="bold", size = 30)) +
theme(axis.text = element_text(size = 25)) +
theme(axis.title = element_text(face="bold", size = 35)) +
guides(color=guide_legend(nrow=4, byrow=TRUE))
dev.off()
lsnsdata$method
lsnsdata$scheme
#Read in data
lsnsdata <- read_csv('lsnsprogression.csv')
lsnsdata$scheme <- paste(lsnsdata$method, lsnsdata$initialization)
lsnsdata <- lsnsdata %>%
filter(initialization == "(cold start)")
ggplot(lsnsdata, aes(x = lsnsiteration, y = objective, colour =scheme, group = scheme)) +
geom_line(size=2.5)
update_geom_defaults("text", list(size = 10))
dev.new(width=8, height=4)
png(file="lsnsiter.png",
width=1000, height=1200)
ggplot(lsnsdata, aes(x = lsnsiteration, y = objective, colour =scheme, group = scheme)) +
geom_line(size=2.5)+
scale_color_manual(breaks = c("Learn-then-optimize (warm start)", "Learn-then-optimize (cold start)", "Learning-enhanced (warm start)", "Learning-enhanced (cold start)","Domain-based (warm start)", "Domain-based (cold start)","Randomized (warm start)", "Randomized (cold start)"),
values = c("#FFB385", "#FE6100", "#EF99C4", "#DC267F", "#B9CDFF", "#648FFF", "#A1A1A1", "#5A5A5A")) +
xlim(0,50) +
xlab(" \nLSNS iteration ") +
ylab(" Throughput\n ") +
labs(title="") +
#theme(legend.position = c(0.4,.9), legend.direction = "horizontal")
theme(legend.position="bottom", legend.text = element_text(face="bold", size = 30)) +
theme(axis.text = element_text(size = 25)) +
theme(axis.title = element_text(face="bold", size = 35)) +
guides(color=guide_legend(nrow=4, byrow=TRUE))
dev.off()
ggplot(lsnsdata, aes(x = cumul_time, y = objective, colour =scheme, group = scheme)) +
geom_line(size=2.5)
update_geom_defaults("text", list(size = 10))
dev.new(width=8, height=4)
png(file="lsnstime.png",
width=1000, height=1200)
ggplot(lsnsdata, aes(x = cumul_time, y = objective, colour =scheme, group = scheme)) +
geom_line(size=2.5)+
scale_color_manual(breaks = c("Learn-then-optimize (warm start)", "Learn-then-optimize (cold start)", "Learning-enhanced (warm start)", "Learning-enhanced (cold start)","Domain-based (warm start)", "Domain-based (cold start)","Randomized (warm start)", "Randomized (cold start)"),
values = c("#FFB385", "#FE6100", "#EF99C4", "#DC267F", "#B9CDFF", "#648FFF", "#A1A1A1", "#5A5A5A")) +
xlim(0,500) +
xlab(" \nTime (s) ") +
ylab(" Throughput\n ") +
labs(title="") +
#theme(legend.position = c(0.4,.9), legend.direction = "horizontal")
theme(legend.position="bottom", legend.text = element_text(size = 24)) +
theme(axis.text = element_text(size = 25)) +
theme(axis.title = element_text(face="bold", size = 35)) +
guides(color=guide_legend(nrow=4, byrow=TRUE))
dev.off()
update_geom_defaults("text", list(size = 10))
dev.new(width=8, height=4)
png(file="lsnstime.png",
width=1000, height=1200)
ggplot(lsnsdata, aes(x = cumul_time, y = objective, colour =scheme, group = scheme)) +
geom_line(size=2.5)+
scale_color_manual(breaks = c("Learn-then-optimize (warm start)", "Learn-then-optimize (cold start)", "Learning-enhanced (warm start)", "Learning-enhanced (cold start)","Domain-based (warm start)", "Domain-based (cold start)","Randomized (warm start)", "Randomized (cold start)"),
values = c("#FFB385", "#FE6100", "#EF99C4", "#DC267F", "#B9CDFF", "#648FFF", "#A1A1A1", "#5A5A5A")) +
xlim(0,500) +
xlab(" \nTime (s) ") +
ylab(" Throughput\n ") +
labs(title="") +
#theme(legend.position = c(0.4,.9), legend.direction = "horizontal")
#theme(legend.position="bottom", legend.text = element_text(size = 24)) +
theme(legend.position="bottom")+
theme(axis.text = element_text(size = 25)) +
theme(axis.title = element_text(face="bold", size = 35)) +
guides(color=guide_legend(nrow=4, byrow=TRUE))
dev.off()
update_geom_defaults("text", list(size = 10))
dev.new(width=8, height=4)
png(file="lsnstime.png",
width=1000, height=1200)
ggplot(lsnsdata, aes(x = cumul_time, y = objective, colour =scheme, group = scheme)) +
geom_line(size=2.5)+
scale_color_manual(breaks = c("Learn-then-optimize (warm start)", "Learn-then-optimize (cold start)", "Learning-enhanced (warm start)", "Learning-enhanced (cold start)","Domain-based (warm start)", "Domain-based (cold start)","Randomized (warm start)", "Randomized (cold start)"),
values = c("#FFB385", "#FE6100", "#EF99C4", "#DC267F", "#B9CDFF", "#648FFF", "#A1A1A1", "#5A5A5A")) +
xlim(0,500) +
xlab(" \nTime (s) ") +
ylab(" Throughput\n ") +
labs(title="") +
#theme(legend.position = c(0.4,.9), legend.direction = "horizontal")
#theme(legend.position="bottom", legend.text = element_text(size = 24)) +
theme(legend.position="none")+
theme(axis.text = element_text(size = 25)) +
theme(axis.title = element_text(face="bold", size = 35)) +
guides(color=guide_legend(nrow=4, byrow=TRUE))
dev.off()
update_geom_defaults("text", list(size = 10))
dev.new(width=8, height=4)
png(file="lsnsiter.png",
width=1000, height=1200)
ggplot(lsnsdata, aes(x = lsnsiteration, y = objective, colour =scheme, group = scheme)) +
geom_line(size=2.5)+
scale_color_manual(breaks = c("Learn-then-optimize (warm start)", "Learn-then-optimize (cold start)", "Learning-enhanced (warm start)", "Learning-enhanced (cold start)","Domain-based (warm start)", "Domain-based (cold start)","Randomized (warm start)", "Randomized (cold start)"),
values = c("#FFB385", "#FE6100", "#EF99C4", "#DC267F", "#B9CDFF", "#648FFF", "#A1A1A1", "#5A5A5A")) +
xlim(0,50) +
xlab(" \nLSNS iteration ") +
ylab(" Throughput\n ") +
labs(title="") +
#theme(legend.position = c(0.4,.9), legend.direction = "horizontal")
#theme(legend.position="bottom", legend.text = element_text(face="bold", size = 30)) +
theme(legend.position="none")+
theme(axis.text = element_text(size = 25)) +
theme(axis.title = element_text(face="bold", size = 35)) +
guides(color=guide_legend(nrow=4, byrow=TRUE))
dev.off()
#Read in data
lsnsdata <- read_csv('lsnsprogression.csv')
lsnsdata$scheme <- paste(lsnsdata$method, lsnsdata$initialization)
lsnsdata <- lsnsdata %>%
filter(initialization == "(cold start)")
#---------------------------------------------------------------#
update_geom_defaults("text", list(size = 10))
dev.new(width=8, height=4)
png(file="lsnsiter.png",
width=1000, height=1200)
ggplot(lsnsdata, aes(x = lsnsiteration, y = objective, colour =scheme, group = scheme)) +
geom_line(size=2.5)+
scale_color_manual(breaks = c("Learn-then-optimize (warm start)", "Learn-then-optimize (cold start)", "Learning-enhanced (warm start)", "Learning-enhanced (cold start)","Domain-based (warm start)", "Domain-based (cold start)","Randomized (warm start)", "Randomized (cold start)"),
values = c("#FFB385", "#FE6100", "#EF99C4", "#DC267F", "#B9CDFF", "#648FFF", "#A1A1A1", "#5A5A5A")) +
xlim(0,50) +
xlab(" \nLSNS iteration ") +
ylab(" Throughput\n ") +
labs(title="") +
#theme(legend.position = c(0.4,.9), legend.direction = "horizontal")
#theme(legend.position="bottom", legend.text = element_text(face="bold", size = 30)) +
theme(legend.position="none")+
theme(axis.text = element_text(size = 25)) +
theme(axis.title = element_text(face="bold", size = 35)) +
guides(color=guide_legend(nrow=4, byrow=TRUE))
dev.off()
#---------------------------------------------------------------#
update_geom_defaults("text", list(size = 10))
dev.new(width=8, height=4)
png(file="lsnstime.png",
width=1000, height=1200)
ggplot(lsnsdata, aes(x = cumul_time, y = objective, colour =scheme, group = scheme)) +
geom_line(size=2.5)+
scale_color_manual(breaks = c("Learn-then-optimize (warm start)", "Learn-then-optimize (cold start)", "Learning-enhanced (warm start)", "Learning-enhanced (cold start)","Domain-based (warm start)", "Domain-based (cold start)","Randomized (warm start)", "Randomized (cold start)"),
values = c("#FFB385", "#FE6100", "#EF99C4", "#DC267F", "#B9CDFF", "#648FFF", "#A1A1A1", "#5A5A5A")) +
xlim(0,400) +
xlab(" \nTime (s) ") +
ylab(" Throughput\n ") +
labs(title="") +
#theme(legend.position = c(0.4,.9), legend.direction = "horizontal")
#theme(legend.position="bottom", legend.text = element_text(size = 24)) +
theme(legend.position="none")+
theme(axis.text = element_text(size = 25)) +
theme(axis.title = element_text(face="bold", size = 35)) +
guides(color=guide_legend(nrow=4, byrow=TRUE))
dev.off()
setwd("C:/Users/13362/repos/warehouse-task-assignment/figures/histograms")
#install.packages(c("tidyverse", "shiny")) #, "leaflet", "DT", "hash"))
library(shiny)
library(tidyverse)
library(dplyr)
#Read in data
data <- read_csv('pickdistrib.csv')
means <- data %>% group_by(picktype) %>%
summarise(mean_picks=mean(picks))
update_geom_defaults("text", list(size = 10))
dev.new(width=8, height=4)
png(file="orderpickdistrib.png",
width=500, height=600)
#Make the histogram
ggplot(data, aes(x=picks, fill=picktype)) +
geom_density(adjust=3, alpha=0.5, color=NA) +
scale_fill_manual(values=c("#0072B2", "#D55E00")) +
geom_vline(xintercept = deframe(means[1, 'mean_picks']), linetype="dashed", color = "#0072B2", size=1) +
geom_vline(xintercept = deframe(means[2, 'mean_picks']), linetype="dashed", color = "#D55E00", size=1) +
geom_vline(xintercept = 1, linetype="dashed", color = "#000000", size=1) +
xlab(" Picks per pod ") +
xlim(1,5) +
ylab(" Density ") +
labs(title="") +
#theme(legend.position = c(0.4,.9), legend.direction = "horizontal")
theme(legend.position="bottom", legend.text = element_text(size = 18)) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 18))
dev.off()
means
means[1,1]
means[2,1]
means[2,2]
means <- data %>% group_by(picktype) %>%
summarise(mean_picks=mean(picks))
means[2,2] = 1.96
#---------------------------------------------------------------#
update_geom_defaults("text", list(size = 10))
dev.new(width=8, height=4)
png(file="orderpickdistrib.png",
width=500, height=600)
#Make the histogram
ggplot(data, aes(x=picks, fill=picktype)) +
geom_density(adjust=3, alpha=0.5, color=NA) +
scale_fill_manual(values=c("#0072B2", "#D55E00")) +
geom_vline(xintercept = deframe(means[1, 'mean_picks']), linetype="dashed", color = "#0072B2", size=1) +
geom_vline(xintercept = deframe(means[2, 'mean_picks']), linetype="dashed", color = "#D55E00", size=1) +
geom_vline(xintercept = 1, linetype="dashed", color = "#000000", size=1) +
xlab(" Picks per pod ") +
xlim(1,5) +
ylab(" Density ") +
labs(title="") +
#theme(legend.position = c(0.4,.9), legend.direction = "horizontal")
theme(legend.position="bottom", legend.text = element_text(size = 18)) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 18))
dev.off()
ddata <- read_csv('distdistrib.csv')
#Group the pods by picks
bigpickmin = 2
aggdata_stg <- ddata %>%
select(disttraveled, itempicks) %>%
mutate(pickgroup = if_else(itempicks >= bigpickmin, "Multi-item picks", "Single-item picks"))
aggdata <- aggdata_stg %>%
select(pickgroup, disttraveled)
means <- aggdata_stg %>% group_by(pickgroup) %>%
summarise(mean_distance=mean(disttraveled))
#---------------------------------------------------------------#
update_geom_defaults("text", list(size = 10))
dev.new(width=8, height=4)
png(file="distdistrib.png",
width=500, height=600)
#Make the histogram
ggplot(aggdata, aes(x=disttraveled, fill=pickgroup)) +
geom_density(alpha=0.5, color=NA) +
scale_fill_manual(values=c("#0072B2", "#D55E00")) +
geom_vline(xintercept = deframe(means[1, 'mean_distance']), linetype="dashed", color = "#0072B2", size=1) +
geom_vline(xintercept = deframe(means[2, 'mean_distance']), linetype="dashed", color = "#D55E00", size=1) +
xlab(" Pod distance travelled ") +
ylab(" Density ") +
#xlim(0,3) +
labs(title="") +
#theme(legend.position = c(0.4,.9), legend.direction = "horizontal")
theme(legend.position="bottom", legend.text = element_text(size = 18)) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 18))
dev.off()

#theme(legend.position = c(0.4,.9), legend.direction = "horizontal")
theme(legend.position="bottom", legend.text = element_text(size = 36)) +
theme(axis.text = element_text(size = 30)) +
theme(axis.title = element_text(size = 36))
dev.off()
update_geom_defaults("text", list(size = 10))
dev.new(width=8, height=4)
png(file="orderpickdistrib_new.png",
width=1000, height=1200)
#Make the histogram
ggplot(data, aes(x=picks, fill=picktype, color=picktype)) +
geom_density(adjust=3, alpha=0.5) +
scale_fill_manual(values=c("#0072B2", "#D55E00")) +
scale_colour_manual(values=c("#0072B2", "#D55E00")) +
geom_vline(xintercept = deframe(means[1, 'mean_picks']), linetype="dashed", color = "#0072B2", size=2.5) +
geom_vline(xintercept = deframe(means[2, 'mean_picks']), linetype="dashed", color = "#D55E00", size=2.5) +
geom_vline(xintercept = 1, linetype="dashed", color = "#000000", size=2.5) +
xlab(" Picks per pod ") +
xlim(1,5) +
ylab(" Density ") +
labs(title="") +
#theme(legend.position = c(0.4,.9), legend.direction = "horizontal")
theme(legend.position="bottom", legend.text = element_text(size = 36)) +
theme(axis.text = element_text(size = 30)) +
theme(axis.title = element_text(size = 36))
dev.off()
ggplot(data, aes(x=picks, fill=picktype, color=picktype)) +
geom_density(adjust=3, alpha=0.5) +
scale_fill_manual(values=c("#0072B2", "#D55E00")) +
scale_colour_manual(values=c("#0072B2", "#D55E00")) +
geom_vline(xintercept = deframe(means[1, 'mean_picks']), linetype="dashed", color = "#0072B2", size=2.5) +
geom_vline(xintercept = deframe(means[2, 'mean_picks']), linetype="dashed", color = "#D55E00", size=2.5) +
geom_vline(xintercept = 1, linetype="dashed", color = "#000000", size=2.5) +
xlab(" Picks per pod ") +
xlim(1,5) +
ylab(" Density ") +
labs(title="") +
#theme(legend.position = c(0.4,.9), legend.direction = "horizontal")
theme(legend.position="bottom", legend.text = element_text(size = 36)) +
theme(axis.text = element_text(size = 30)) +
theme(axis.title = element_text(size = 36))
#Make the histogram
ggplot(data, aes(x=picks, fill=picktype, color=picktype)) +
geom_density(adjust=3, alpha=0.5, size=1.5) +
scale_fill_manual(values=c("#0072B2", "#D55E00")) +
scale_colour_manual(values=c("#0072B2", "#D55E00")) +
geom_vline(xintercept = deframe(means[1, 'mean_picks']), linetype="dashed", color = "#0072B2", size=2.5) +
geom_vline(xintercept = deframe(means[2, 'mean_picks']), linetype="dashed", color = "#D55E00", size=2.5) +
geom_vline(xintercept = 1, linetype="dashed", color = "#000000", size=2.5) +
xlab(" Picks per pod ")
update_geom_defaults("text", list(size = 10))
dev.new(width=8, height=4)
png(file="orderpickdistrib_new.png",
width=1000, height=1200)
#Make the histogram
ggplot(data, aes(x=picks, fill=picktype, color=picktype)) +
geom_density(adjust=3, alpha=0.5, size=1.5) +
scale_fill_manual(values=c("#0072B2", "#D55E00")) +
scale_colour_manual(values=c("#0072B2", "#D55E00")) +
geom_vline(xintercept = deframe(means[1, 'mean_picks']), linetype="dashed", color = "#0072B2", size=2.5) +
geom_vline(xintercept = deframe(means[2, 'mean_picks']), linetype="dashed", color = "#D55E00", size=2.5) +
geom_vline(xintercept = 1, linetype="dashed", color = "#000000", size=2.5) +
xlab(" Picks per pod ") +
xlim(1,5) +
ylab(" Density ") +
labs(title="") +
#theme(legend.position = c(0.4,.9), legend.direction = "horizontal")
theme(legend.position="bottom", legend.text = element_text(size = 36)) +
theme(axis.text = element_text(size = 30)) +
theme(axis.title = element_text(size = 36))
dev.off()
#install.packages(c("tidyverse", "shiny")) #, "leaflet", "DT", "hash"))
library(shiny)
setwd("C:/Users/13362/repos/warehouse-task-assignment/figures/decomposition")
#install.packages(c("tidyverse", "shiny")) #, "leaflet", "DT", "hash"))
library(shiny)
library(tidyverse)
library(dplyr)
results <- read_csv('decompdata.csv')
#---------------------------------------------------------------#
means <- results %>% group_by(partitionobjective) %>%
summarise(mean_pileon=sum(objective)/sum(pods_used))
#---------------------------------------------------------------#
update_geom_defaults("text", list(size = 24))
dev.new(width=8, height=4)
png(file="partition_pileon.png",
width=700, height=600)
ggplot(data = results, aes(x = partition, y = items_picked_per_pod, fill = partitionobjective)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75)  +
ylim(0,2.1) +
geom_hline(yintercept = deframe(means[1, 'mean_pileon']), linetype="dashed", color = "#0072B2", size=1) +
geom_hline(yintercept = deframe(means[2, 'mean_pileon']), linetype="dashed", color = "#D55E00", size=1) +
#geom_text(data = NULL, x = 12, y = 1.6, label = "1.71", size = 4) +
#geom_text(data = NULL, x = 12, y = 1.9, label = "1.86", size = 4) +
#geom_text(aes(label = items_picked_per_pod), fontface = "bold", vjust = 1.5,
#          position = position_dodge(.9), size = 4) +
labs(x = "\n Partition", y = "Items picked per pod \n") +
scale_fill_manual(values=c("#0072B2", "#D55E00")) +
scale_x_continuous(breaks = seq(1,10,1)) +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", size = 24),
axis.title.y = element_text(face="bold", size = 24),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_text(face="bold", size = 24)) +
theme(legend.position="bottom", legend.text = element_text(size = 24))
dev.off()
ggplot(data = results, aes(x = partition, y = items_picked_per_pod, fill = partitionobjective)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75)  +
ylim(0,2.1)
utilmeans <- results %>% group_by(partitionobjective) %>%
summarise(mean_util=mean(time_utilization))
utilmeans
#Read in data
results <- read_csv('decompdata.csv')
means <- results %>% group_by(partitionobjective) %>%
summarise(mean_pileon=sum(objective)/sum(pods_used))
means
objmeans <- results %>% group_by(partitionobjective) %>%
summarise(mean_obj=mean(objective))
update_geom_defaults("text", list(size = 24))
dev.new(width=8, height=4)
png(file="partition_obj.png",
width=700, height=600)
ggplot(data = results, aes(x = partition, y = objective, fill = partitionobjective)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75)  +
ylim(0,250) +
geom_hline(yintercept = deframe(objmeans[1, 'mean_obj']), linetype="dashed", color = "#0072B2", size=1) +
geom_hline(yintercept = deframe(objmeans[2, 'mean_obj']), linetype="dashed", color = "#D55E00", size=1) +
#geom_text(data = NULL, x = 12, y = 1.6, label = "1.71", size = 4) +
#geom_text(data = NULL, x = 12, y = 1.9, label = "1.86", size = 4) +
#geom_text(aes(label = items_picked_per_pod), fontface = "bold", vjust = 1.5,
#          position = position_dodge(.9), size = 4) +
labs(x = "\n Partition", y = "Throughput \n") +
scale_fill_manual(values=c("#0072B2", "#D55E00")) +
scale_x_continuous(breaks = seq(1,10,1)) +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", size = 24),
axis.title.y = element_text(face="bold", size = 24),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_text(face="bold", size = 24)) +
theme(legend.position="bottom", legend.text = element_text(size = 24))
dev.off()
ggplot(data = results, aes(x = partition, y = objective, fill = partitionobjective)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75)  +
ylim(0,250) +
geom_hline(yintercept = deframe(objmeans[1, 'mean_obj']), linetype="dashed", color = "#0072B2", size=1) +
geom_hline(yintercept = deframe(objmeans[2, 'mean_obj']), linetype="dashed", color = "#D55E00", size=1) +
#geom_text(data = NULL, x = 12, y = 1.6, label = "1.71", size = 4) +
#geom_text(data = NULL, x = 12, y = 1.9, label = "1.86", size = 4) +
#geom_text(aes(label = items_picked_per_pod), fontface = "bold", vjust = 1.5,
#          position = position_dodge(.9), size = 4) +
labs(x = "\n Partition", y = "Throughput \n") +
scale_fill_manual(values=c("#0072B2", "#D55E00")) +
scale_x_continuous(breaks = seq(1,10,1))
means <- results %>% group_by(partitionobjective) %>%
summarise(mean_pileon=sum(objective)/sum(pods_used))
results <- read_csv('decompdata.csv')
View(results)
objmeans <- results %>% group_by(partitionobjective) %>%
summarise(mean_obj=mean(objective))
objmeans
ggplot(data = results, aes(x = partition, y = objective, fill = partitionobjective)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75)  +
ylim(0,250)
results
ggplot(data = results, aes(x = partition, y = objective, fill = partitionobjective))
ggplot(data = results, aes(x = partition, y = objective, fill = partitionobjective)) +
geom_bar(stat = "identity")
ggplot(data = results, aes(x = partition, y = objective, fill = partitionobjective)) +
geom_bar(stat = "identity", position = position_dodge())
ggplot(data = results, aes(x = partition, y = objective, fill = partitionobjective)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75)
ggplot(data = results, aes(x = partition, y = objective, fill = partitionobjective)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75)  +
ylim(0,250)
ggplot(data = results, aes(x = partition, y = objective, fill = partitionobjective)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75)  +
ylim(0,300)
ggplot(data = results, aes(x = partition, y = objective, fill = partitionobjective)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75)  +
ylim(0,300) +
geom_hline(yintercept = deframe(objmeans[1, 'mean_obj']), linetype="dashed", color = "#0072B2", size=1) +
geom_hline(yintercept = deframe(objmeans[2, 'mean_obj']), linetype="dashed", color = "#D55E00", size=1) +
#geom_text(data = NULL, x = 12, y = 1.6, label = "1.71", size = 4) +
#geom_text(data = NULL, x = 12, y = 1.9, label = "1.86", size = 4) +
#geom_text(aes(label = items_picked_per_pod), fontface = "bold", vjust = 1.5,
#          position = position_dodge(.9), size = 4) +
labs(x = "\n Partition", y = "Throughput \n") +
scale_fill_manual(values=c("#0072B2", "#D55E00")) +
scale_x_continuous(breaks = seq(1,10,1))
update_geom_defaults("text", list(size = 24))
dev.new(width=8, height=4)
png(file="partition_obj.png",
width=700, height=600)
ggplot(data = results, aes(x = partition, y = objective, fill = partitionobjective)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75)  +
ylim(0,300) +
geom_hline(yintercept = deframe(objmeans[1, 'mean_obj']), linetype="dashed", color = "#0072B2", size=1) +
geom_hline(yintercept = deframe(objmeans[2, 'mean_obj']), linetype="dashed", color = "#D55E00", size=1) +
#geom_text(data = NULL, x = 12, y = 1.6, label = "1.71", size = 4) +
#geom_text(data = NULL, x = 12, y = 1.9, label = "1.86", size = 4) +
#geom_text(aes(label = items_picked_per_pod), fontface = "bold", vjust = 1.5,
#          position = position_dodge(.9), size = 4) +
labs(x = "\n Partition", y = "Throughput \n") +
scale_fill_manual(values=c("#0072B2", "#D55E00")) +
scale_x_continuous(breaks = seq(1,10,1)) +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", size = 24),
axis.title.y = element_text(face="bold", size = 24),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_text(face="bold", size = 24)) +
theme(legend.position="bottom", legend.text = element_text(size = 24))
dev.off()
objmeans
utilmeans <- results %>% group_by(partitionobjective) %>%
summarise(mean_util=mean(time_utilization))
#---------------------------------------------------------------#
update_geom_defaults("text", list(size = 24))
dev.new(width=8, height=4)
png(file="partition_util.png",
width=700, height=600)
ggplot(data = results, aes(x = partition, y = time_utilization, fill = partitionobjective)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75)  +
ylim(0,100) +
geom_hline(yintercept = deframe(utilmeans[1, 'mean_util']), linetype="dashed", color = "#0072B2", size=1) +
geom_hline(yintercept = deframe(utilmeans[2, 'mean_util']), linetype="dashed", color = "#D55E00", size=1) +
#geom_text(data = NULL, x = 12, y = 1.6, label = "1.71", size = 4) +
#geom_text(data = NULL, x = 12, y = 1.9, label = "1.86", size = 4) +
#geom_text(aes(label = items_picked_per_pod), fontface = "bold", vjust = 1.5,
#          position = position_dodge(.9), size = 4) +
labs(x = "\n Partition", y = "Utilization \n") +
scale_fill_manual(values=c("#0072B2", "#D55E00")) +
scale_x_continuous(breaks = seq(1,10,1)) +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", size = 24),
axis.title.y = element_text(face="bold", size = 24),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_text(face="bold", size = 24)) +
theme(legend.position="bottom", legend.text = element_text(size = 24))
dev.off()
#Read in data
results <- read_csv('decompdata.csv')
utilmeans <- results %>% group_by(partitionobjective) %>%
summarise(mean_util=mean(time_utilization))
update_geom_defaults("text", list(size = 24))
dev.new(width=8, height=4)
png(file="partition_util.png",
width=700, height=600)
ggplot(data = results, aes(x = partition, y = time_utilization, fill = partitionobjective)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75)  +
ylim(0,100) +
geom_hline(yintercept = deframe(utilmeans[1, 'mean_util']), linetype="dashed", color = "#0072B2", size=1) +
geom_hline(yintercept = deframe(utilmeans[2, 'mean_util']), linetype="dashed", color = "#D55E00", size=1) +
#geom_text(data = NULL, x = 12, y = 1.6, label = "1.71", size = 4) +
#geom_text(data = NULL, x = 12, y = 1.9, label = "1.86", size = 4) +
#geom_text(aes(label = items_picked_per_pod), fontface = "bold", vjust = 1.5,
#          position = position_dodge(.9), size = 4) +
labs(x = "\n Partition", y = "Utilization \n") +
scale_fill_manual(values=c("#0072B2", "#D55E00")) +
scale_x_continuous(breaks = seq(1,10,1)) +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", size = 24),
axis.title.y = element_text(face="bold", size = 24),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_text(face="bold", size = 24)) +
theme(legend.position="bottom", legend.text = element_text(size = 24))
dev.off()
update_geom_defaults("text", list(size = 24))
dev.new(width=8, height=4)
png(file="partition_util.png",
width=700, height=600)
ggplot(data = results, aes(x = partition, y = time_utilization, fill = partitionobjective)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75)  +
ylim(0,1) +
geom_hline(yintercept = deframe(utilmeans[1, 'mean_util']), linetype="dashed", color = "#0072B2", size=1) +
geom_hline(yintercept = deframe(utilmeans[2, 'mean_util']), linetype="dashed", color = "#D55E00", size=1) +
#geom_text(data = NULL, x = 12, y = 1.6, label = "1.71", size = 4) +
#geom_text(data = NULL, x = 12, y = 1.9, label = "1.86", size = 4) +
#geom_text(aes(label = items_picked_per_pod), fontface = "bold", vjust = 1.5,
#          position = position_dodge(.9), size = 4) +
labs(x = "\n Partition", y = "Utilization \n") +
scale_fill_manual(values=c("#0072B2", "#D55E00")) +
scale_x_continuous(breaks = seq(1,10,1)) +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", size = 24),
axis.title.y = element_text(face="bold", size = 24),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_text(face="bold", size = 24)) +
theme(legend.position="bottom", legend.text = element_text(size = 24))
dev.off()
means <- results %>% group_by(partitionobjective) %>%
summarise(mean_pileon=sum(objective)/sum(pods_used))
#---------------------------------------------------------------#
update_geom_defaults("text", list(size = 24))
dev.new(width=8, height=4)
png(file="partition_pileon.png",
width=700, height=600)
ggplot(data = results, aes(x = partition, y = items_picked_per_pod, fill = partitionobjective)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75)  +
ylim(0,3.3) +
geom_hline(yintercept = deframe(means[1, 'mean_pileon']), linetype="dashed", color = "#0072B2", size=1) +
geom_hline(yintercept = deframe(means[2, 'mean_pileon']), linetype="dashed", color = "#D55E00", size=1) +
#geom_text(data = NULL, x = 12, y = 1.6, label = "1.71", size = 4) +
#geom_text(data = NULL, x = 12, y = 1.9, label = "1.86", size = 4) +
#geom_text(aes(label = items_picked_per_pod), fontface = "bold", vjust = 1.5,
#          position = position_dodge(.9), size = 4) +
labs(x = "\n Partition", y = "Items picked per pod \n") +
scale_fill_manual(values=c("#0072B2", "#D55E00")) +
scale_x_continuous(breaks = seq(1,10,1)) +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", size = 24),
axis.title.y = element_text(face="bold", size = 24),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_text(face="bold", size = 24)) +
theme(legend.position="bottom", legend.text = element_text(size = 24))
dev.off()
#Read in data
results <- read_csv('decompdata.csv')
#---------------------------------------------------------------#
means <- results %>% group_by(partitionobjective) %>%
summarise(mean_pileon=sum(objective)/sum(pods_used))
#---------------------------------------------------------------#
update_geom_defaults("text", list(size = 24))
dev.new(width=8, height=4)
png(file="partition_pileon.png",
width=700, height=600)
ggplot(data = results, aes(x = partition, y = items_picked_per_pod, fill = partitionobjective)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75)  +
ylim(0,3.3) +
geom_hline(yintercept = deframe(means[1, 'mean_pileon']), linetype="dashed", color = "#0072B2", size=1) +
geom_hline(yintercept = deframe(means[2, 'mean_pileon']), linetype="dashed", color = "#D55E00", size=1) +
#geom_text(data = NULL, x = 12, y = 1.6, label = "1.71", size = 4) +
#geom_text(data = NULL, x = 12, y = 1.9, label = "1.86", size = 4) +
#geom_text(aes(label = items_picked_per_pod), fontface = "bold", vjust = 1.5,
#          position = position_dodge(.9), size = 4) +
labs(x = "\n Partition", y = "Items picked per pod \n") +
scale_fill_manual(values=c("#0072B2", "#D55E00")) +
scale_x_continuous(breaks = seq(1,10,1)) +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", size = 24),
axis.title.y = element_text(face="bold", size = 24),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_text(face="bold", size = 24)) +
theme(legend.position="bottom", legend.text = element_text(size = 24))
dev.off()
#Read in data
results <- read_csv('decompdata.csv')
#---------------------------------------------------------------#
means <- results %>% group_by(partitionobjective) %>%
summarise(mean_pileon=sum(objective)/sum(pods_used))
#---------------------------------------------------------------#
update_geom_defaults("text", list(size = 24))
dev.new(width=8, height=4)
png(file="partition_pileon.png",
width=700, height=600)
ggplot(data = results, aes(x = partition, y = items_picked_per_pod, fill = partitionobjective)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75)  +
ylim(0,3.3) +
geom_hline(yintercept = deframe(means[1, 'mean_pileon']), linetype="dashed", color = "#0072B2", size=1) +
geom_hline(yintercept = deframe(means[2, 'mean_pileon']), linetype="dashed", color = "#D55E00", size=1) +
#geom_text(data = NULL, x = 12, y = 1.6, label = "1.71", size = 4) +
#geom_text(data = NULL, x = 12, y = 1.9, label = "1.86", size = 4) +
#geom_text(aes(label = items_picked_per_pod), fontface = "bold", vjust = 1.5,
#          position = position_dodge(.9), size = 4) +
labs(x = "\n Partition", y = "Items picked per pod \n") +
scale_fill_manual(values=c("#0072B2", "#D55E00")) +
scale_x_continuous(breaks = seq(1,10,1)) +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", size = 24),
axis.title.y = element_text(face="bold", size = 24),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_text(face="bold", size = 24)) +
#theme(legend.position="bottom", legend.text = element_text(size = 24))
theme(legend.position="none")
dev.off()
#---------------------------------------------------------------#
utilmeans <- results %>% group_by(partitionobjective) %>%
summarise(mean_util=mean(time_utilization))
#---------------------------------------------------------------#
update_geom_defaults("text", list(size = 24))
dev.new(width=8, height=4)
png(file="partition_util.png",
width=700, height=600)
ggplot(data = results, aes(x = partition, y = time_utilization, fill = partitionobjective)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75)  +
ylim(0,1) +
geom_hline(yintercept = deframe(utilmeans[1, 'mean_util']), linetype="dashed", color = "#0072B2", size=1) +
geom_hline(yintercept = deframe(utilmeans[2, 'mean_util']), linetype="dashed", color = "#D55E00", size=1) +
#geom_text(data = NULL, x = 12, y = 1.6, label = "1.71", size = 4) +
#geom_text(data = NULL, x = 12, y = 1.9, label = "1.86", size = 4) +
#geom_text(aes(label = items_picked_per_pod), fontface = "bold", vjust = 1.5,
#          position = position_dodge(.9), size = 4) +
labs(x = "\n Partition", y = "Utilization \n") +
scale_fill_manual(values=c("#0072B2", "#D55E00")) +
scale_x_continuous(breaks = seq(1,10,1)) +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", size = 24),
axis.title.y = element_text(face="bold", size = 24),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_text(face="bold", size = 24)) +
#theme(legend.position="bottom", legend.text = element_text(size = 24))
theme(legend.position="none")
dev.off()
#---------------------------------------------------------------#
objmeans <- results %>% group_by(partitionobjective) %>%
summarise(mean_obj=mean(objective))
#---------------------------------------------------------------#
update_geom_defaults("text", list(size = 24))
dev.new(width=8, height=4)
png(file="partition_obj.png",
width=700, height=600)
ggplot(data = results, aes(x = partition, y = objective, fill = partitionobjective)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75)  +
ylim(0,300) +
geom_hline(yintercept = deframe(objmeans[1, 'mean_obj']), linetype="dashed", color = "#0072B2", size=1) +
geom_hline(yintercept = deframe(objmeans[2, 'mean_obj']), linetype="dashed", color = "#D55E00", size=1) +
#geom_text(data = NULL, x = 12, y = 1.6, label = "1.71", size = 4) +
#geom_text(data = NULL, x = 12, y = 1.9, label = "1.86", size = 4) +
#geom_text(aes(label = items_picked_per_pod), fontface = "bold", vjust = 1.5,
#          position = position_dodge(.9), size = 4) +
labs(x = "\n Partition", y = "Throughput \n") +
scale_fill_manual(values=c("#0072B2", "#D55E00")) +
scale_x_continuous(breaks = seq(1,10,1)) +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", size = 24),
axis.title.y = element_text(face="bold", size = 24),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_text(face="bold", size = 24)) +
theme(legend.position="none")
#theme(legend.position="bottom", legend.text = element_text(size = 24))
dev.off()
means
#Read in data
results <- read_csv('decompdata.csv')
#---------------------------------------------------------------#
means <- results %>% group_by(partitionobjective) %>%
summarise(mean_pileon=sum(objective)/sum(pods_used))
means
#Read in data
results <- read_csv('decompdata.csv')
#---------------------------------------------------------------#
means <- results %>% group_by(partitionobjective) %>%
summarise(mean_pileon=sum(objective)/sum(pods_used))
#---------------------------------------------------------------#
update_geom_defaults("text", list(size = 24))
dev.new(width=8, height=4)
png(file="partition_pileon.png",
width=700, height=600)
ggplot(data = results, aes(x = partition, y = items_picked_per_pod, fill = partitionobjective)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75)  +
ylim(0,3.3) +
geom_hline(yintercept = deframe(means[1, 'mean_pileon']), linetype="dashed", color = "#0072B2", size=1) +
geom_hline(yintercept = deframe(means[2, 'mean_pileon']), linetype="dashed", color = "#D55E00", size=1) +
#geom_text(data = NULL, x = 12, y = 1.6, label = "1.71", size = 4) +
#geom_text(data = NULL, x = 12, y = 1.9, label = "1.86", size = 4) +
#geom_text(aes(label = items_picked_per_pod), fontface = "bold", vjust = 1.5,
#          position = position_dodge(.9), size = 4) +
labs(x = "\n Partition", y = "Items picked per pod \n") +
scale_fill_manual(values=c("#0072B2", "#D55E00")) +
scale_x_continuous(breaks = seq(1,10,1)) +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", size = 24),
axis.title.y = element_text(face="bold", size = 24),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_text(face="bold", size = 24)) +
#theme(legend.position="bottom", legend.text = element_text(size = 24))
theme(legend.position="none")
dev.off()
means
results <- read_csv('decompdata.csv')
#---------------------------------------------------------------#
means <- results %>% group_by(partitionobjective) %>%
summarise(mean_pileon=sum(objective)/sum(pods_used))
means
update_geom_defaults("text", list(size = 24))
dev.new(width=8, height=4)
png(file="partition_pileon.png",
width=700, height=600)
ggplot(data = results, aes(x = partition, y = items_picked_per_pod, fill = partitionobjective)) +
geom_bar(stat = "identity", position = position_dodge(), alpha = 0.75)  +
ylim(0,3.3) +
geom_hline(yintercept = deframe(means[1, 'mean_pileon']), linetype="dashed", color = "#0072B2", size=1) +
geom_hline(yintercept = deframe(means[2, 'mean_pileon']), linetype="dashed", color = "#D55E00", size=1) +
#geom_text(data = NULL, x = 12, y = 1.6, label = "1.71", size = 4) +
#geom_text(data = NULL, x = 12, y = 1.9, label = "1.86", size = 4) +
#geom_text(aes(label = items_picked_per_pod), fontface = "bold", vjust = 1.5,
#          position = position_dodge(.9), size = 4) +
labs(x = "\n Partition", y = "Items picked per pod \n") +
scale_fill_manual(values=c("#0072B2", "#D55E00")) +
scale_x_continuous(breaks = seq(1,10,1)) +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", size = 24),
axis.title.y = element_text(face="bold", size = 24),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.title = element_text(face="bold", size = 24)) +
#theme(legend.position="bottom", legend.text = element_text(size = 24))
theme(legend.position="none")
dev.off()
means

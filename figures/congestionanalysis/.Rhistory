allies = ifelse(vote.x==vote.y, 1, 0)
)
adjacencymatrix_stg <- bothvotes %>%
mutate(
votedtogether = ifelse(vote.x==vote.y, 1, 0)
)
adjacencymatrix_stg2 <- adjacencymatrix_stg %>%
select(season, episode, castaway.x, castaway.y, votedtogether)
View(adjacencymatrix_stg2)
#Find adjacency matrix by episode
firstvote <- left_join(allcombos31, vh31, by = NULL, copy = FALSE)
bothvotes <- left_join(firstvote, vh31, by = c("season"="season", "episode"="episode"), copy = FALSE)
adjacencymatrix_stg <- bothvotes %>%
mutate(
votedtogether = ifelse(vote.x==vote.y, 1, 0)
)
adjacencymatrix_stg2 <- adjacencymatrix_stg %>%
select(season, episode, castaway.x, castaway.y, votedtogether)
View(adjacencymatrix_stg2)
View(vh31)
#Get episode lists
episodes4 <- distinct(vh4, season, episode, day)
episodes31 <- distinct(vh31, season, episode, day)
#All combos
allcombos4 <- inner_join(episodes4, castaways4, by=character())
allcombos31 <- inner_join(episodes31, castaways31, by=character())
#Find adjacency matrix by episode
firstvote <- left_join(allcombos31, vh31, by = NULL, copy = FALSE)
bothvotes <- left_join(firstvote, vh31, by = c("season"="season", "episode"="episode", "day"="day"), copy = FALSE)
adjacencymatrix_stg <- bothvotes %>%
mutate(
votedtogether = ifelse(vote.x==vote.y, 1, 0)
)
adjacencymatrix_stg2 <- adjacencymatrix_stg %>%
select(season, episode, day, castaway.x, castaway.y, votedtogether)
write.csv(adjacencymatrix_stg2, "C:\\Users\\13362\\Survivor\\adjacency31.csv"
write.csv(adjacencymatrix_stg2, "C:\\Users\\13362\\Survivor\\adjacency31.csv")
View(adjacencymatrix_stg2)
write.csv(adjacencymatrix_stg2, "C:\\Users\\13362\\Survivor\\adjacency31.csv")
bothvotes <- left_join(firstvote, firstvote, by = c("season"="season", "episode"="episode", "day"="day"), copy = FALSE)
adjacencymatrix_stg <- bothvotes %>%
mutate(
votedtogether = ifelse(vote.x==vote.y, 1, 0)
)
adjacencymatrix_stg2 <- adjacencymatrix_stg %>%
select(season, episode, day, castaway.x, castaway.y, votedtogether)
write.csv(adjacencymatrix_stg2, "C:\\Users\\13362\\Survivor\\adjacency31.csv")
View(bothvotes)
adjacencymatrix <- adjacencymatrix_stg2 %>%
replace_na(0)
adjacencymatrix <- adjacencymatrix_stg2 %>%
replace_na(votedtogether, 0)
adjacencymatrix <- adjacencymatrix_stg2 %>%
replace_na(votedtogether = 0)
adjacencymatrix <- adjacencymatrix_stg2 %>%
replace_na(list(votedtogether = 0))
View(adjacencymatrix)
write.csv(adjacencymatrix, "C:\\Users\\13362\\Survivor\\adjacency31.csv")
setwd("C:/Users/13362/repos/warehouse-task-assignment/figures/congestionanalysis")
library(shiny)
library(DT)
library(tidyverse)
library(dplyr)
#---------------------------------------------------------------#
#---------------------------------------------------------------#
#Read in detour and delay distribution data
congdata <- read_csv('congestionsolution2.csv')
nocongdata <- read_csv('nocongestionsolution2.csv')
#---------------------------------------------------------------#
#---------------------------------------------------------------#
vec_cong <- rep("Congestion-aware", nrow(congdata))
vec_nocong <- rep("Congestion-blind", nrow(nocongdata))
congdata <- congdata %>%
mutate(datalabel = vec_cong)
nocongdata <- nocongdata %>%
mutate(datalabel = vec_nocong)
alldata = rbind(congdata, nocongdata)
#---------------------------------------------------------------#
#Detour
update_geom_defaults("text", list(size = 48))
dev.new(width=8, height=4)
png(file="congestiondensity.png", width=900, height=1200)
# width=450, height=600)
alldata %>%
ggplot(aes(x=congutil, color=datalabel, fill=datalabel)) +
geom_density(alpha=0.3,size=1.5)+
geom_vline(aes(xintercept = 1), size=1.5)+
#xlim(0, 0.00000001)+
#ylim(0, 100)+
scale_colour_manual("",
breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB")) +
labs(x="Congestion utilization (as fraction of capacity)", y="Density")+
#scale_x_continuous(limits=c(0,0.15), labels = scales::percent_format(accuracy = 1)) +
#theme(legend.position="none") +
theme(legend.position="bottom", legend.text = element_text(size = 40)) +
theme(axis.text = element_text(size = 40)) +
theme(axis.title = element_text(size = 40))
dev.off()
#---------------------------------------------------------------#
#Detour
update_geom_defaults("text", list(size = 48))
dev.new(width=8, height=4)
png(file="congestionhistogram.png", width=1200, height=800)
# width=450, height=600)
alldata %>%
ggplot(aes(x=congutil, color=datalabel, fill=datalabel)) +
geom_histogram(alpha=0.3,size=1.5)+
geom_vline(aes(xintercept = 1.05), size=1.5)+
#xlim(0, 0.00000001)+
#ylim(0, 100)+
scale_colour_manual("",
breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB")) +
labs(x="Congestion utilization", y="Intersection-time count")+
#scale_x_continuous(limits=c(0,0.15), labels = scales::percent_format(accuracy = 1)) +
#theme(legend.position="none") +
theme(legend.position="bottom", legend.text = element_text(size = 40)) +
theme(axis.text = element_text(size = 40)) +
theme(axis.title = element_text(size = 40))
dev.off()
setwd("C:/Users/13362/repos/warehouse-task-assignment/figures/congestionanalysis")
#install.packages(c("tidyverse", "shiny", "leaflet", "DT", "hash"))
library(shiny)
library(DT)
library(tidyverse)
#Read in detour and delay distribution data
congdata <- read_csv('congestionsolution2.csv')
nocongdata <- read_csv('nocongestionsolution2.csv')
nrow(congdata)
nrow(nocongdata)
vec_cong <- rep("Congestion-aware", nrow(congdata))
vec_nocong <- rep("Congestion-blind", nrow(nocongdata))
congdata <- congdata %>%
mutate(datalabel = vec_cong)
nocongdata <- nocongdata %>%
mutate(datalabel = vec_nocong)
alldata = rbind(congdata, nocongdata)
#---------------------------------------------------------------#
#Detour
update_geom_defaults("text", list(size = 48))
dev.new(width=8, height=4)
png(file="congestiondensity_raw.png", width=900, height=1200)
# width=450, height=600)
alldata %>%
ggplot(aes(x=congutil, color=datalabel, fill=datalabel)) +
geom_density(alpha=0.3,size=1.5)+
geom_vline(aes(xintercept = 1), size=1.5)+
#xlim(0, 0.00000001)+
#ylim(0, 100)+
scale_colour_manual("",
breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB")) +
labs(x="Congestion utilization (as fraction of capacity)", y="Density")+
#scale_x_continuous(limits=c(0,0.15), labels = scales::percent_format(accuracy = 1)) +
#theme(legend.position="none") +
theme(legend.position="bottom", legend.text = element_text(size = 40)) +
theme(axis.text = element_text(size = 40)) +
theme(axis.title = element_text(size = 40))
dev.off()
#---------------------------------------------------------------#
#Detour
update_geom_defaults("text", list(size = 48))
dev.new(width=8, height=4)
png(file="congestionhistogram_raw.png", width=1200, height=800)
# width=450, height=600)
alldata %>%
ggplot(aes(x=congutil, color=datalabel, fill=datalabel)) +
geom_histogram(alpha=0.3,size=1.5)+
geom_vline(aes(xintercept = 1.05), size=1.5)+
#xlim(0, 0.00000001)+
#ylim(0, 100)+
scale_colour_manual("",
breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB")) +
labs(x="Congestion utilization", y="Intersection-time count")+
#scale_x_continuous(limits=c(0,0.15), labels = scales::percent_format(accuracy = 1)) +
#theme(legend.position="none") +
theme(legend.position="bottom", legend.text = element_text(size = 40)) +
theme(axis.text = element_text(size = 40)) +
theme(axis.title = element_text(size = 40))
dev.off()
alldata %>%
ggplot() + #aes(x=congutil, color=datalabel, fill=datalabel)) +
#geom_histogram(alpha=0.3,size=1.5)+
geom_histogram(aes(x = congdata, fill = "Congestion-aware"), alpha = 0.5, size=1.5) +
geom_histogram(aes(x = nocongdata, fill = "Congestion-blind"), alpha = 0.5, size=1.5) +
geom_vline(aes(xintercept = 1.05), size=1.5)
alldata %>%
ggplot() + #aes(x=congutil, color=datalabel, fill=datalabel)) +
#geom_histogram(alpha=0.3,size=1.5)+
geom_histogram(aes(x = congdata, fill = "Congestion-aware"), alpha = 0.5, size=1.5)
congdata
alldata %>%
ggplot() aes(x=congutil, color=datalabel, fill=datalabel)) +
#geom_histogram(alpha=0.3,size=1.5)+
geom_histogram(aes(x = congutil, fill = "Congestion-aware"), alpha = 0.5, size=1.5)
#Read in detour and delay distribution data
congdata <- read_csv('congestionsolution2.csv')
nocongdata <- read_csv('nocongestionsolution2.csv')
congdata2 <- rename(congdata, congestionaware = congutil)
nocongdata2 <- rename(nocongdata, congestionblind = congutil)
sidebysidedata = cbind(congdata2, nocongdata2)
sidebysidedata
#Read in detour and delay distribution data
congdata <- read_csv('congestionsolution2.csv')
nocongdata <- read_csv('nocongestionsolution3.csv')
congdata2 <- rename(congdata, congestionaware = congutil)
nocongdata2 <- rename(nocongdata, congestionblind = congutil)
sidebysidedata = cbind(congdata2, nocongdata2)
sidebysidedata
alldata %>%
ggplot() aes(x=sidebysidedata, color=datalabel, fill=datalabel)) +
#geom_histogram(alpha=0.3,size=1.5)+
geom_histogram(aes(x = congestionaware, fill = "Congestion-aware"), alpha = 0.5, size=1.5) +
geom_histogram(aes(x = congestionblind, fill = "Congestion-blind"), alpha = 0.5, size=1.5)
alldata %>%
ggplot() aes(x=sidebysidedata))
alldata %>%
ggplot(aes(x=sidebysidedata)) + #, color=datalabel, fill=datalabel)) +
#geom_histogram(alpha=0.3,size=1.5)+
geom_histogram(aes(x = congestionaware, fill = "Congestion-aware"), alpha = 0.5, size=1.5)
sidebysidedata
alldata %>%
ggplot(aes(x=sidebysidedata)) + #, color=datalabel, fill=datalabel)) +
#geom_histogram(alpha=0.3,size=1.5)+
geom_histogram(aes(x = congestionaware))
#Read in detour and delay distribution data
congdata <- read_csv('congestionsolution2.csv')
nocongdata <- read_csv('nocongestionsolution3.csv')
alldata %>%
ggplot() #aes(x=sidebysidedata)) + #, color=datalabel, fill=datalabel)) +
#geom_histogram(alpha=0.3,size=1.5)+
geom_histogram(aes(x = congdata, fill = "Congestion-aware"), alpha = 0.5, size=1.5) +
geom_histogram(aes(x = nocongdata, fill = "Congestion-blind"), alpha = 0.5, size=1.5)
alldata %>%
ggplot() #aes(x=sidebysidedata)) + #, color=datalabel, fill=datalabel)) +
#geom_histogram(alpha=0.3,size=1.5)+
geom_histogram(aes(x = congdata, fill = "Congestion-aware"), alpha = 0.5, size=1.5)
data <- data.frame(values = c(rnorm(100),
rnorm(100)),
group = c(rep("A", 100),
rep("B", 100)))
data
#Read in detour and delay distribution data
congdata <- read_csv('congestionsolution2.csv')
nocongdata <- read_csv('nocongestionsolution3.csv')
#---------------------------------------------------------------#
congdata2 <- rename(congdata, congestionaware = congutil)
nocongdata2 <- rename(nocongdata, congestionblind = congutil)
sidebysidedata = cbind(congdata2, nocongdata2)
#---------------------------------------------------------------#
vec_cong <- rep("Congestion-aware", nrow(congdata))
vec_nocong <- rep("Congestion-blind", nrow(nocongdata))
congdata <- congdata %>%
mutate(datalabel = vec_cong)
nocongdata <- nocongdata %>%
mutate(datalabel = vec_nocong)
alldata = rbind
ggplot(alldata, aes(x = congutil, fill = datalabel)) +
geom_histogram(position = "identity", alpha = 0.4, bins = 50)
congutil
datalabel
alldata
#Read in detour and delay distribution data
congdata <- read_csv('congestionsolution2.csv')
nocongdata <- read_csv('nocongestionsolution3.csv')
vec_cong <- rep("Congestion-aware", nrow(congdata))
vec_nocong <- rep("Congestion-blind", nrow(nocongdata))
congdata <- congdata %>%
mutate(datalabel = vec_cong)
nocongdata <- nocongdata %>%
mutate(datalabel = vec_nocong)
alldata = rbind(congdata, nocongdata)
alldata = rbind(congdata, nocongdata)
alldata
ggplot(alldata, aes(x = congutil, fill = datalabel)) +
geom_histogram(position = "identity", alpha = 0.4, bins = 50)
ggplot(alldata, aes(x = congutil, fill = datalabel)) +
geom_histogram(position = "identity", alpha = 0.4, bins = 50)
geom_vline(aes(xintercept = 1.05), size=1.5)+
#xlim(0, 0.00000001)+
#ylim(0, 100)+
scale_colour_manual("",
breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB")) +
labs(x="Congestion utilization", y="Intersection-time count")+
#scale_x_continuous(limits=c(0,0.15), labels = scales::percent_format(accuracy = 1)) +
#theme(legend.position="none") +
theme(legend.position="bottom", legend.text = element_text(size = 40)) +
theme(axis.text = element_text(size = 40)) +
theme(axis.title = element_text(size = 40))
ggplot(alldata, aes(x = congutil, fill = datalabel)) +
geom_histogram(position = "identity", alpha = 0.4, bins = 50)
geom_vline(aes(xintercept = 1.05), size=1.5)
alldata  %>%
ggplot(alldata, aes(x = congutil, fill = datalabel)) +
geom_histogram(position = "identity", alpha = 0.4, bins = 50)
geom_vline(aes(xintercept = 1.05), size=1.5)
alldata  %>%
ggplot(aes(x = congutil, fill = datalabel)) +
geom_histogram(position = "identity", alpha = 0.4, bins = 50)
geom_vline(aes(xintercept = 1.05), size=1.5)
alldata  %>%
ggplot(aes(x = congutil, fill = datalabel)) +
geom_histogram(position = "identity", alpha = 0.4, bins = 20)
geom_vline(aes(xintercept = 1.05), size=1.5)
alldata  %>%
ggplot(aes(x = congutil, fill = datalabel)) +
geom_histogram(position = "identity", alpha = 0.5, bins = 20)
geom_vline(aes(xintercept = 1.05), size=1.5)+
#xlim(0, 0.00000001)+
#ylim(0, 100)+
scale_colour_manual("",
breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))
#Read in detour and delay distribution data
congdata <- read_csv('congestionsolution2.csv')
nocongdata <- read_csv('nocongestionsolution3.csv')
#---------------------------------------------------------------#
vec_cong <- rep("Congestion-aware", nrow(congdata))
vec_nocong <- rep("Congestion-blind", nrow(nocongdata))
congdata <- congdata %>%
mutate(datalabel = vec_cong)
nocongdata <- nocongdata %>%
mutate(datalabel = vec_nocong)
alldata = rbind(nocongdata, congdata)
alldata  %>%
ggplot(aes(x = congutil, fill = datalabel)) +
geom_histogram(position = "identity", alpha = 0.5, bins = 20)
geom_vline(aes(xintercept = 1.05), size=1.5)+
#xlim(0, 0.00000001)+
#ylim(0, 100)+
scale_colour_manual("",
breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))
#Read in detour and delay distribution data
congdata <- read_csv('congestionsolution2.csv')
nocongdata <- read_csv('nocongestionsolution3.csv')
#---------------------------------------------------------------#
vec_cong <- rep("Congestion-zaware", nrow(congdata))
vec_nocong <- rep("Congestion-blind", nrow(nocongdata))
congdata <- congdata %>%
mutate(datalabel = vec_cong)
nocongdata <- nocongdata %>%
mutate(datalabel = vec_nocong)
alldata = rbind(nocongdata, congdata)
alldata  %>%
ggplot(aes(x = congutil, fill = datalabel)) +
geom_histogram(position = "identity", alpha = 0.5, bins = 20)
geom_vline(aes(xintercept = 1.05), size=1.5)+
#xlim(0, 0.00000001)+
#ylim(0, 100)+
scale_colour_manual("",
breaks = c("Congestion-zaware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Congestion-zaware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))
#Detour
update_geom_defaults("text", list(size = 48))
dev.new(width=8, height=4)
png(file="congestionhistogram_raw.png", width=1200, height=800)
# width=450, height=600)
alldata  %>%
ggplot(aes(x = congutil, fill = datalabel)) +
geom_histogram(position = "identity", alpha = 0.5, bins = 20)
geom_vline(aes(xintercept = 1.05), size=1.5)+
#xlim(0, 0.00000001)+
#ylim(0, 100)+
scale_colour_manual("",
breaks = c("Congestion-zaware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Congestion-zaware", "Congestion-blind"),
values = c("#DA853E", "#649BCB")) +
labs(x="Congestion utilization", y="Intersection-time count")+
#scale_x_continuous(limits=c(0,0.15), labels = scales::percent_format(accuracy = 1)) +
#theme(legend.position="none") +
theme(legend.position="bottom", legend.text = element_text(size = 40)) +
theme(axis.text = element_text(size = 40)) +
theme(axis.title = element_text(size = 40))
dev.off()
View(vh4)
alldata  %>%
ggplot(aes(x = congutil, fill = datalabel)) +
geom_histogram(position = "identity", alpha = 0.6, bins = 20)
geom_vline(aes(xintercept = 1.05), size=1.5)
alldata  %>%
ggplot(aes(x = congutil, fill = datalabel)) +
geom_histogram(position = "identity", alpha = 0.9, bins = 20)
geom_vline(aes(xintercept = 1.05), size=1.5)
alldata  %>%
ggplot(aes(x = congutil, fill = datalabel)) +
geom_histogram(position = "identity", alpha = 0.3, bins = 20)
geom_vline(aes(xintercept = 1.05), size=1.5)
alldata %>%
ggplot(aes(x=congutil, color=datalabel, fill=datalabel)) +
geom_density(alpha=0.3,size=1.5)+
geom_vline(aes(xintercept = 1), size=1.5)
#Detour
update_geom_defaults("text", list(size = 48))
dev.new(width=8, height=4)
png(file="congestionhistogram_raw.png", width=1200, height=800)
# width=450, height=600)
alldata  %>%
ggplot(aes(x = congutil, fill = datalabel)) +
geom_histogram(position = "identity", alpha = 0.3, bins = 20)
geom_vline(aes(xintercept = 1.05), size=1.5) +
#xlim(0, 0.00000001)+
#ylim(0, 100)+
scale_colour_manual("",
breaks = c("Congestion-zaware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Congestion-zaware", "Congestion-blind"),
values = c("#DA853E", "#649BCB")) +
labs(x="Congestion utilization", y="Intersection-time count")+
#scale_x_continuous(limits=c(0,0.15), labels = scales::percent_format(accuracy = 1)) +
#theme(legend.position="none") +
theme(legend.position="bottom", legend.text = element_text(size = 40)) +
theme(axis.text = element_text(size = 40)) +
theme(axis.title = element_text(size = 40))
dev.off()
setwd("C:/Users/13362/repos/warehouse-task-assignment/figures/congestionanalysis")
library(shiny)
library(DT)
library(tidyverse)
library(dplyr)
#---------------------------------------------------------------#
#---------------------------------------------------------------#
#Read in detour and delay distribution data
congdata <- read_csv('congestionsolution2.csv')
nocongdata <- read_csv('nocongestionsolution2.csv')
#---------------------------------------------------------------#
#---------------------------------------------------------------#
vec_cong <- rep("Congestion-aware", nrow(congdata))
vec_nocong <- rep("Congestion-blind", nrow(nocongdata))
congdata <- congdata %>%
mutate(datalabel = vec_cong)
nocongdata <- nocongdata %>%
mutate(datalabel = vec_nocong)
alldata = rbind(congdata, nocongdata)
update_geom_defaults("text", list(size = 48))
dev.new(width=8, height=4)
png(file="congestionhistogram_raw.png", width=1200, height=800)
# width=450, height=600)
alldata %>%
ggplot(aes(x=congutil, color=datalabel, fill=datalabel)) +
geom_histogram(position="identity",alpha=0.3,size=1.5)+
geom_vline(aes(xintercept = 1.05), size=1.5)+
#xlim(0, 0.00000001)+
#ylim(0, 100)+
scale_colour_manual("",
breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB")) +
labs(x="Congestion utilization", y="Intersection-time count")+
#scale_x_continuous(limits=c(0,0.15), labels = scales::percent_format(accuracy = 1)) +
#theme(legend.position="none") +
theme(legend.position="bottom", legend.text = element_text(size = 40)) +
theme(axis.text = element_text(size = 40)) +
theme(axis.title = element_text(size = 40))
dev.off()
#Read in detour and delay distribution data
congdata <- read_csv('congestionsolution2.csv')
nocongdata <- read_csv('nocongestionsolution3.csv')
#---------------------------------------------------------------#
#---------------------------------------------------------------#
vec_cong <- rep("Congestion-aware", nrow(congdata))
vec_nocong <- rep("Congestion-blind", nrow(nocongdata))
congdata <- congdata %>%
mutate(datalabel = vec_cong)
nocongdata <- nocongdata %>%
mutate(datalabel = vec_nocong)
alldata = rbind(congdata, nocongdata)
#---------------------------------------------------------------#
#Detour
update_geom_defaults("text", list(size = 48))
dev.new(width=8, height=4)
png(file="congestionhistogram_raw.png", width=1200, height=800)
# width=450, height=600)
alldata %>%
ggplot(aes(x=congutil, color=datalabel, fill=datalabel)) +
geom_histogram(position="identity",alpha=0.3,size=1.5)+
geom_vline(aes(xintercept = 1.05), size=1.5)+
#xlim(0, 0.00000001)+
#ylim(0, 100)+
scale_colour_manual("",
breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB")) +
labs(x="Congestion utilization", y="Intersection-time count")+
#scale_x_continuous(limits=c(0,0.15), labels = scales::percent_format(accuracy = 1)) +
#theme(legend.position="none") +
theme(legend.position="bottom", legend.text = element_text(size = 40)) +
theme(axis.text = element_text(size = 40)) +
theme(axis.title = element_text(size = 40))
dev.off()

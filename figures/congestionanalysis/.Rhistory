1+2
1+2
install.packages('tidyverse')
0
library(tidyverse)
data.frame(name=c('Ann', 'Bob'), number=c(3.141, 2.718)) %>% gather(type, favorite, -name)
data.frame(x=rnorm(1000), y=rnorm(1000)) %>% ggplot(aes(x,y)) + geom_point()
install.packages(c("tidyverse", "shiny", "leaflet", "DT"))
library(shiny)
library(DT)
library(tidyverse)
library(leaflet)
runApp('dummy_app')
install.packages("survivoR")
library(survivoR)
vh <- vote_history %>%
filter(
season == 40,
episode == 10
)
vh <- vote_history %>%
filter(
season == 40,
episode == 10
)
vh <- vote_history
filter(
season == 40,
episode == 10
)
vh
View(vh)
summary(vh)
table(vh$immunity)
table(vh$vote)
install.packages(c("tidyverse", "shiny", "leaflet", "DT"))
library(shiny)
library(DT)
library(tidyverse)
library(leaflet)
library(lubridate)
library(dplyr)
library(network)
vh <- vote_history %>%
filter(
season == 40,
episode == 10
)
View(vh)
vh <- vote_history
vh2 <- vote_history %>%
filter(
season == 40,
episode == 10
)
View(vh2)
View(vh2)
vh2 <- vote_history %>%
tabyl(vote)
library(janitor)
install.packages("janitor")
library(janitor)
vh2 <- vote_history %>%
tabyl(vote)
View(vh2)
vh2 <- vote_history %>%
tabyl(season,vote)
View(vh2)
vh31 <- vote_history %>%
filter(
season == 31,
episode == 10
)
vh23 <- vote_history %>%
filter(
season == 23,
episode == 10
)
View(vh23)
vh31 <- vote_history %>%
filter(
season == 31
)
vh23 <- vote_history %>%
filter(
season == 23
)
distinct(vh23, castaway)
castaways31 <- distinct(vh31, castaway)
castaways23 <- distinct(vh23, castaway)
View(vh31)
View(castaways31)
vh4 <- vote_history %>%
filter(
season == 4
)
castaways4 <- distinct(vh4, castaway)
singep <- vote_history %>%
filter(
season == 31, episode == 1
)
View(singep)
inner_join(singep, singep, by = NULL, copy = FALSE)
tets <- inner_join(singep, singep, by = NULL, copy = FALSE)
View(tets)
tets <- inner_join(singep, singep, by = c(singep.episode=singep.episode), copy = FALSE)
View(singep)
tets <- inner_join(singep, singep, by = c("episode"="episode"), copy = FALSE)
View(tets)
episodes4 <- distinct(vh4, episode)
episodes31 <- distinct(vh31, episode)
View(episodes4)
#Get episode lists
episodes4 <- distinct(vh4, season, episode)
View(castaways4)
View(episodes4)
#Get episode lists
episodes4 <- distinct(vh4, season, episode)
episodes31 <- distinct(vh31, season, episode)
#All combos
cross_join(episodes4, castaways4)
#All combos
outer_join(episodes4, castaways4)
#All combos
inner_join(episodes4, castaways4)
#All combos
inner_join(episodes4, castaways4, by=NULL)
#All combos
inner_join(episodes4, castaways4, by=character())
allcombos31 <- inner_join(episodes31, castaways31, by=character())
allcombos31 <- inner_join(episodes31, castaways31, by=character())
tets <- inner_join(allcombos4, singep, by = NULL, copy = FALSE)
#All combos
allcombos4 <- inner_join(episodes4, castaways4, by=character())
tets <- inner_join(allcombos4, singep, by = NULL, copy = FALSE)
tets <- inner_join(allcombos31, singep, by = NULL, copy = FALSE)
View(tets)
tets <- left_join(allcombos31, singep, by = NULL, copy = FALSE)
bothvotes <- left_join(firstvote, singep, by = c("season"="season", "episode"="episode"), copy = FALSE)
firstvote <- left_join(allcombos31, singep, by = NULL, copy = FALSE)
bothvotes <- left_join(firstvote, singep, by = c("season"="season", "episode"="episode"), copy = FALSE)
View(bothvotes)
bothvotes %>%
mutate(
g = ifelse(vote.x==vote.y, "Allies", "Not")
)
test <- bothvotes %>%
mutate(
g = ifelse(vote.x==vote.y, "Allies", "Not")
)
View(singep)
View(test)
adjacencymatrix_stg <- bothvotes %>%
mutate(
allies = ifelse(vote.x==vote.y, 1, 0)
)
adjacencymatrix_stg <- bothvotes %>%
mutate(
votedtogether = ifelse(vote.x==vote.y, 1, 0)
)
adjacencymatrix_stg2 <- adjacencymatrix_stg %>%
select(season, episode, castaway.x, castaway.y, votedtogether)
View(adjacencymatrix_stg2)
#Find adjacency matrix by episode
firstvote <- left_join(allcombos31, vh31, by = NULL, copy = FALSE)
bothvotes <- left_join(firstvote, vh31, by = c("season"="season", "episode"="episode"), copy = FALSE)
adjacencymatrix_stg <- bothvotes %>%
mutate(
votedtogether = ifelse(vote.x==vote.y, 1, 0)
)
adjacencymatrix_stg2 <- adjacencymatrix_stg %>%
select(season, episode, castaway.x, castaway.y, votedtogether)
View(adjacencymatrix_stg2)
View(vh31)
#Get episode lists
episodes4 <- distinct(vh4, season, episode, day)
episodes31 <- distinct(vh31, season, episode, day)
#All combos
allcombos4 <- inner_join(episodes4, castaways4, by=character())
allcombos31 <- inner_join(episodes31, castaways31, by=character())
#Find adjacency matrix by episode
firstvote <- left_join(allcombos31, vh31, by = NULL, copy = FALSE)
bothvotes <- left_join(firstvote, vh31, by = c("season"="season", "episode"="episode", "day"="day"), copy = FALSE)
adjacencymatrix_stg <- bothvotes %>%
mutate(
votedtogether = ifelse(vote.x==vote.y, 1, 0)
)
adjacencymatrix_stg2 <- adjacencymatrix_stg %>%
select(season, episode, day, castaway.x, castaway.y, votedtogether)
write.csv(adjacencymatrix_stg2, "C:\\Users\\13362\\Survivor\\adjacency31.csv"
write.csv(adjacencymatrix_stg2, "C:\\Users\\13362\\Survivor\\adjacency31.csv")
View(adjacencymatrix_stg2)
write.csv(adjacencymatrix_stg2, "C:\\Users\\13362\\Survivor\\adjacency31.csv")
bothvotes <- left_join(firstvote, firstvote, by = c("season"="season", "episode"="episode", "day"="day"), copy = FALSE)
adjacencymatrix_stg <- bothvotes %>%
mutate(
votedtogether = ifelse(vote.x==vote.y, 1, 0)
)
adjacencymatrix_stg2 <- adjacencymatrix_stg %>%
select(season, episode, day, castaway.x, castaway.y, votedtogether)
write.csv(adjacencymatrix_stg2, "C:\\Users\\13362\\Survivor\\adjacency31.csv")
View(bothvotes)
adjacencymatrix <- adjacencymatrix_stg2 %>%
replace_na(0)
adjacencymatrix <- adjacencymatrix_stg2 %>%
replace_na(votedtogether, 0)
adjacencymatrix <- adjacencymatrix_stg2 %>%
replace_na(votedtogether = 0)
adjacencymatrix <- adjacencymatrix_stg2 %>%
replace_na(list(votedtogether = 0))
View(adjacencymatrix)
write.csv(adjacencymatrix, "C:\\Users\\13362\\Survivor\\adjacency31.csv")
setwd("C:/Users/13362/repos/warehouse-task-assignment/figures/congestionanalysis")
library(shiny)
library(DT)
library(tidyverse)
library(dplyr)
#---------------------------------------------------------------#
#---------------------------------------------------------------#
#Read in detour and delay distribution data
congdata <- read_csv('congestionsolution.csv')
nocongdata <- read_csv('nocongestionsolution.csv')
vec_cong <- rep("Congestion-aware", nrow(congdata))
vec_nocong <- rep("Congestion-blind", nrow(nocongdata))
congdata <- congdata %>%
mutate(datalabel = vec_cong)
nocongdata <- nocongdata %>%
mutate(datalabel = vec_nocong)
alldata = rbind(congdata, nocongdata)
#---------------------------------------------------------------#
#Detour
update_geom_defaults("text", list(size = 48))
dev.new(width=8, height=4)
png(file="congestionhistogram.png", width=900, height=1200)
# width=450, height=600)
alldata %>%
ggplot(aes(x=congutil, color=datalabel, fill=datalabel)) +
geom_density(alpha=0.3,size=1.5)+
geom_vline(data = mean_detour, aes(xintercept = 1), size=1.5)+
#xlim(0, 0.00000001)+
#ylim(0, 100)+
scale_colour_manual("",
breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB")) +
labs(x="Congestion utilization (as fraction of capacity)", y="Density")+
#scale_x_continuous(limits=c(0,0.15), labels = scales::percent_format(accuracy = 1)) +
#theme(legend.position="none") +
theme(legend.position="bottom", legend.text = element_text(size = 40)) +
theme(axis.text = element_text(size = 40)) +
theme(axis.title = element_text(size = 40))
dev.off()
alldata %>%
ggplot(aes(x=congutil, color=datalabel, fill=datalabel)) +
geom_density(alpha=0.3,size=1.5)+
geom_vline(aes(xintercept = 1), size=1.5)
#Detour
update_geom_defaults("text", list(size = 48))
dev.new(width=8, height=4)
png(file="congestionhistogram.png", width=900, height=1200)
# width=450, height=600)
alldata %>%
ggplot(aes(x=congutil, color=datalabel, fill=datalabel)) +
geom_density(alpha=0.3,size=1.5)+
geom_vline(aes(xintercept = 1), size=1.5)+
#xlim(0, 0.00000001)+
#ylim(0, 100)+
scale_colour_manual("",
breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB")) +
labs(x="Congestion utilization (as fraction of capacity)", y="Density")+
#scale_x_continuous(limits=c(0,0.15), labels = scales::percent_format(accuracy = 1)) +
#theme(legend.position="none") +
theme(legend.position="bottom", legend.text = element_text(size = 40)) +
theme(axis.text = element_text(size = 40)) +
theme(axis.title = element_text(size = 40))
dev.off()
#Detour
update_geom_defaults("text", list(size = 48))
dev.new(width=8, height=4)
png(file="congestiondensity.png", width=900, height=1200)
# width=450, height=600)
alldata %>%
ggplot(aes(x=congutil, color=datalabel, fill=datalabel)) +
geom_density(alpha=0.3,size=1.5)+
geom_vline(aes(xintercept = 1), size=1.5)+
#xlim(0, 0.00000001)+
#ylim(0, 100)+
scale_colour_manual("",
breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB")) +
labs(x="Congestion utilization (as fraction of capacity)", y="Density")+
#scale_x_continuous(limits=c(0,0.15), labels = scales::percent_format(accuracy = 1)) +
#theme(legend.position="none") +
theme(legend.position="bottom", legend.text = element_text(size = 40)) +
theme(axis.text = element_text(size = 40)) +
theme(axis.title = element_text(size = 40))
dev.off()
#---------------------------------------------------------------#
#Detour
update_geom_defaults("text", list(size = 48))
dev.new(width=8, height=4)
png(file="congestionhistogram.png", width=900, height=1200)
# width=450, height=600)
alldata %>%
ggplot(aes(x=congutil, color=datalabel, fill=datalabel)) +
geom_histogram(alpha=0.3,size=1.5)+
geom_vline(aes(xintercept = 1.05), size=1.5)+
#xlim(0, 0.00000001)+
#ylim(0, 100)+
scale_colour_manual("",
breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB")) +
labs(x="Congestion utilization", y="Intersection-time count")+
#scale_x_continuous(limits=c(0,0.15), labels = scales::percent_format(accuracy = 1)) +
#theme(legend.position="none") +
theme(legend.position="bottom", legend.text = element_text(size = 40)) +
theme(axis.text = element_text(size = 40)) +
theme(axis.title = element_text(size = 40))
dev.off()
#---------------------------------------------------------------#
#---------------------------------------------------------------#
#Read in detour and delay distribution data
congdata <- read_csv('congestionsolution2.csv')
nocongdata <- read_csv('nocongestionsolution2.csv')
#---------------------------------------------------------------#
#---------------------------------------------------------------#
vec_cong <- rep("Congestion-aware", nrow(congdata))
vec_nocong <- rep("Congestion-blind", nrow(nocongdata))
congdata <- congdata %>%
mutate(datalabel = vec_cong)
nocongdata <- nocongdata %>%
mutate(datalabel = vec_nocong)
alldata = rbind(congdata, nocongdata)
#---------------------------------------------------------------#
#Detour
update_geom_defaults("text", list(size = 48))
dev.new(width=8, height=4)
png(file="congestiondensity.png", width=900, height=1200)
# width=450, height=600)
alldata %>%
ggplot(aes(x=congutil, color=datalabel, fill=datalabel)) +
geom_density(alpha=0.3,size=1.5)+
geom_vline(aes(xintercept = 1), size=1.5)+
#xlim(0, 0.00000001)+
#ylim(0, 100)+
scale_colour_manual("",
breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB")) +
labs(x="Congestion utilization (as fraction of capacity)", y="Density")+
#scale_x_continuous(limits=c(0,0.15), labels = scales::percent_format(accuracy = 1)) +
#theme(legend.position="none") +
theme(legend.position="bottom", legend.text = element_text(size = 40)) +
theme(axis.text = element_text(size = 40)) +
theme(axis.title = element_text(size = 40))
dev.off()
#---------------------------------------------------------------#
#Detour
update_geom_defaults("text", list(size = 48))
dev.new(width=8, height=4)
png(file="congestionhistogram.png", width=900, height=1200)
# width=450, height=600)
alldata %>%
ggplot(aes(x=congutil, color=datalabel, fill=datalabel)) +
geom_histogram(alpha=0.3,size=1.5)+
geom_vline(aes(xintercept = 1.05), size=1.5)+
#xlim(0, 0.00000001)+
#ylim(0, 100)+
scale_colour_manual("",
breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB")) +
labs(x="Congestion utilization", y="Intersection-time count")+
#scale_x_continuous(limits=c(0,0.15), labels = scales::percent_format(accuracy = 1)) +
#theme(legend.position="none") +
theme(legend.position="bottom", legend.text = element_text(size = 40)) +
theme(axis.text = element_text(size = 40)) +
theme(axis.title = element_text(size = 40))
dev.off()
alldata %>%
ggplot(aes(x=congutil, color=datalabel, fill=datalabel)) +
geom_histogram(alpha=0.3,size=1.5)+
geom_vline(aes(xintercept = 1.05), size=1.5)+
#xlim(0, 0.00000001)+
#ylim(0, 100)+
scale_colour_manual("",
breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB")) +
labs(x="Congestion utilization", y="Intersection-time count")+
#scale_x_continuous(limits=c(0,0.15), labels = scales::percent_format(accuracy = 1)) +
#theme(legend.position="none") +
theme(legend.position="bottom", legend.text = element_text(size = 40)) +
theme(axis.text = element_text(size = 40)) +
theme(axis.title = element_text(size = 40))
alldata %>%
ggplot(aes(x=congutil, color=datalabel, fill=datalabel)) +
geom_density(alpha=0.3,size=1.5)+
geom_vline(aes(xintercept = 1), size=1.5)+
#xlim(0, 0.00000001)+
#ylim(0, 100)+
scale_colour_manual("",
breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Congestion-aware", "Congestion-blind"),
values = c("#DA853E", "#649BCB")) +
labs(x="Congestion utilization (as fraction of capacity)", y="Density")+
#scale_x_continuous(limits=c(0,0.15), labels = scales::percent_format(accuracy = 1)) +
#theme(legend.position="none") +
theme(legend.position="bottom", legend.text = element_text(size = 40)) +
theme(axis.text = element_text(size = 40)) +
theme(axis.title = element_text(size = 40))
